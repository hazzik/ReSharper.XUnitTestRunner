Debugging:

This is what I do.

1. Don't install xunitcontrib into ProgramFiles\JetBrains\ReSharper\...\plugins\...
2. Create a separate folder somewhere containing the production (or latest working development) version of the dlls
3. Create a new Visual Studio shortcut:
   a. Set the "Start In" field to this directory
   b. Add "/ReSharper.Plugin xunitcontrib.runner.resharper.provider.4.5.dll" to the command line
      (or /ReSharper.Plugin xunitcontrib.runner.resharper.provider.4.1.dll for R# 4.1)
4. Using this shortcut loads the plugin, but allows you to debug Visual Studio without it being loaded

To Debug:

1. Set xunitcontrib.runner.resharper.provider.4.x as your "StartUp Project"
2. In the Properties -> Debug page for this project, set the start program as Visual Studio
   (e.g. C:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE\devenv.exe)
3. Set the arguments to "..\..\..\tests.sln /ReSharper.Plugin xunitcontrib.runner.resharper.provider.4.5.dll"
   (without the quotes, and of course 4.1 if debugging the 4.1 plugin)
4. Leave working directory blank, it will default to the bin\Debug directory






TODO:

Resharper + xunit - XunitFileExplorer

1. ProcessBeforeInterior - refactor to split into ProcessDeclaredElement
2. Either have ProcessTestClass add all test methods, or just have ProcessTestMethod add them - don't try and do both
3. Where does the output from the Theory tests come from?
4. Get Theory tests to display with parameter information
5. Get Theory tests to display as different to normal tests - multiple? different icon?
6. Nested test should display nested name? nunit doesn't
7. Nunit tests show reasons for skip + fail in tree view pane - we don't
8. IsUnitTestElement can return true for public methods with a [Fact] attribute but that aren't in a public class
	(affects solution wide analysis more visibly)
9. Split xunit tests into separate files with more distinct names


